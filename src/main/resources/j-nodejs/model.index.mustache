/**
 * Initialize and export all model together
*/
{{#db_isDynamoDB}}
const config = require('config')
const dynamoose = require('dynamoose')
const { Table } = require('../constants')
{{/db_isDynamoDB}}
{{#models}}
{{#model}}
{{#vendorExtensions}}
{{#x-table-model}}
const {{name}}Model = require('./{{classFilename}}.model')
{{/x-table-model}}
{{/vendorExtensions}}
{{/model}}
{{/models}}

{{#orm_isSequelize}}
{{#models}}
  {{#model}}
    {{#vendorExtensions}}
      {{#x-table-model}}
{{#allVars}}
  {{#vendorExtensions.x-foreign-model}}
{{model.name}}Model.belongsTo({{.}}Model, { foreignKey: '{{name}}', targetKey: 'id' })
{{.}}Model.hasMany({{model.name}}Model, { foreignKey: '{{name}}', sourceKey: 'id' })
  {{/vendorExtensions.x-foreign-model}}
{{/allVars}}
      {{/x-table-model}}
    {{/vendorExtensions}}
  {{/model}}
{{/models}}
module.exports = {
{{#models}}
{{#model}}
  {{#vendorExtensions}}
    {{#x-table-model}}
  {{name}}Model,
    {{/x-table-model}}
  {{/vendorExtensions}}
{{/model}}
{{/models}}
}
{{/orm_isSequelize}}
{{#db_isDynamoDB}}
dynamoose.AWS.config.update({
  accessKeyId: config.AMAZON.AWS_ACCESS_KEY_ID,
  secretAccessKey: config.AMAZON.AWS_SECRET_ACCESS_KEY,
  region: config.AMAZON.AWS_REGION
})

if (config.AMAZON.AWS_IS_LOCAL === true) {
  dynamoose.local(config.AMAZON.AWS_DYNAMODB_ENDPOINT)
}

dynamoose.setDefaults({
  create: false,
  update: false
})

module.exports = {
  DynamoDB: dynamoose.ddb(),
{{#models}}
  {{#model}}
    {{#vendorExtensions}}
      {{#x-table-model}}
  {{classname}}: dynamoose.model(Table.{{classname}}, {{name}}Model),
      {{/x-table-model}}
    {{/vendorExtensions}}
  {{/model}}
{{/models}}
}

{{/db_isDynamoDB}}