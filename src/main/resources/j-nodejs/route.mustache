const express = require('express')
const config = require('./src/config/config')
const jwt = require('jsonwebtoken')
const expressJwt = require('express-jwt')
{{#userToken}}

const jwtCheck = expressJwt({ secret: config.jwt.secretKey })
{{/userToken}}
{{#m2mToken}}
const jwks = require('jwks-rsa')
const jwtAuthz = require('express-jwt-authz')

const jwtCheck = expressJwt({
  secret: jwks.expressJwtSecret({
    cache: true,
    rateLimit: true,
    jwksUri: `https://${config.jwt.auth0Domain}/.well-known/jwks.json`
  }),
  // audience: `https://${config.jwt.auth0Audience}`,
  issuer: `https://${config.jwt.auth0Domain}/`,
  algorithms: ['RS256']
})

const authAdmin = jwtAuthz(['admin'], { failWithError: true })
const authUser = jwtAuthz(['user'], { failWithError: true })
{{/m2mToken}}
const router = express.Router() // eslint-disable-line new-cap
{{#openAPI}}
{{#swgdoc}}

const swaggerJSDoc = require('swagger-jsdoc')
/**
* Swagger-jsdoc
*/
const swaggerDefinition = {
  info: {
    // API informations (required)
    title: '{{project.name}}', // Title (required)
    version: '{{project.version}}', // Version (required)
    description: '{{project.description}}', // Description (optional)
  },
  host: `${config.host}:${config.port}`, // Host (optional)
  basePath: `${basePath}`, // Base path (optional)
}

// Options for the swagger docs
const options = {
  // Import swaggerDefinitions
  swaggerDefinition,
  // Path to the API docs
  // Note that this path is relative to the current directory from which the Node.js is ran,
  // not the application itself.
  apis: ['./app-route.js', './src/controller/*.js', './src/model/*.js'],
}

/**
 * @swagger
 * tags:
 *   - name: auth
 *     description: 'Certification for request user'
 *   - name: user
 *     description: 'Request with user resource'
 */

// Initialize swagger-jsdoc -> returns validated swagger spec in json format
const swaggerSpec = swaggerJSDoc(options)

// Serve swagger docs the way you like (Recommendation: swagger-tools)
router.get('/swagger', (req, res) => {
  res.setHeader('Content-Type', 'application/json')
  res.send(swaggerSpec)
})

/**
 * @swagger
 * tags:
 {{#tags}}
 *   - name: {{name}}
 *     description: {{description}}
 {{/tags}}
 */
 {{/swgdoc}}
{{/openAPI}}

{{#apiInfo}}
{{#apis}}
const {{classname}}Ctrl = require('./src/controller/{{classFilename}}')
{{/apis}}
{{/apiInfo}}

/**
 * Return token for userid
 */
router.get('/auth/login/:userId', async (req, res, next) => {
  /** ignore validate because this api just for test easily */
  const { userId } = req.params
  const { role } = req.query

  const token = jwt.sign({
    userId,
    role
  }, config.jwt.secretKey, {
    expiresIn: config.jwt.expired
  })
  return res.json({
    token,
    userId,
    role
  })
})
{{#apiInfo}}
{{#apis}}
{{#operations}}
{{#operation}}

// {{httpMethod}} {{basePathWithoutHost}}{{path}}
router.route('{{path}}').{{httpMethod}}({{#userToken}}jwtCheck, {{/userToken}}{{#m2mToken}}jwtCheck, authUser, {{/m2mToken}}{{classname}}Ctrl.{{operationId}})
{{/operation}}
{{/operations}}
{{/apis}}
{{/apiInfo}}

module.exports = router
